#!/usr/bin/env bash

set -e

bin="$(dirname $BASH_SOURCE)"
bin="$(cd $bin ; pwd)"
base="$(dirname $bin)"
cd $base

help=
help_message=
profile=first
urls=
forever=
make_only=

while [[ -n "$1" ]] ; do
    case "$1" in
        -h | --help)
            help=1
            ;;
        -s | --second)
            profile=second
            ;;
        -u | --url)
            if [[ -n "$urls" ]] ; then
                urls="$urls,"
            fi
            urls="$urls\"$2\""
            shift
            ;;
        -f | --forever)
            forever=1
            ;;
        --make)
            make_only=1
            ;;
        *)
            break
            ;;
    esac
    shift
done

if [[ -n "$help" ]] ; then
    if [[ -n "$help_message" ]] ; then
        echo "$help_message"
    fi
    echo "Usage: $(basename $0) -s -u URL"
    echo "Options:"
    echo "  -s | --second"
    echo "      Use a second test profile (for running two instances of the browser)"
    echo "  -u URL | --url URL"
    echo "      Open the given URL on startup"
    echo "  -f | --forever"
    echo "      Restart the browser when it is terminated (normally)"
    echo "      ^C in the terminal to stop."
    echo "  --make"
    echo "      Make components.js, don't run cfx run"
    echo "All other options are passed to cfx run"
    if [[ -n "$help_message" ]] ; then
        exit
    else
        exit 1
    fi
fi

profiledir=
extra_ops=
terminal_title=
case "$profile" in
    first)
        profiledir="--profiledir Profile"
        terminal_title="hotdish fx"
        ;;
    second)
        profiledir="--profiledir Profile2"
        extra_ops="\"+username\": \"Second $USER\","
        terminal_title="hotdish fx2"
        ;;
    *)
        fail "Unknown profile setup: $profile"
        ;;
esac

fail () {
    echo "$@"
    title
    exit 2
}

if ! which -s jsx ; then
    echo "You must install jsx, like:"
    echo "  npm install -g react-tools"
    exit 2
fi

if ! which -s cfx ; then
    fail "You must install the Addon-SDK"
fi

# If you have another local alias for a custom TogetherJS location, you can
# add it here:
tjs_urls="
  http://localhost:8080/togetherjs-min.js
  http://togetherjs.localhost/togetherjs-min.js
  https://togetherjs.com/versions/0.1HOTDISH/togetherjs-min.js
"

for tjs_url in $tjs_urls ; do
    if curl $tjs_url > /dev/null 2>&1 ; then
        echo "Using TogetherJS location $tjs_url"
        extra_ops="\"+togetherJsLocation\": \"$tjs_url\",$extra_ops"
        break
    fi
done

title () {
    echo -e "\033]0;$*\007"
}

make_jsx () {
    comp_src="$base/data/sidebar/jsx/components.js"
    comp_dest="$base/data/sidebar/js/components.js"
    if [[ $comp_src -nt $comp_dest ]] ; then
        jsx < $comp_src > $comp_dest \
            || fail "Error in components.js"
    fi
}

run () {
    title $terminal_title
    make_jsx
    cfx run $profiledir --static-args "{
      \"debug\": true,
      \"prefs\": {
        $extra_ops
        \"general.warnOnAboutConfig\": false
      },
      \"bgTabs\": [$urls]
    }" "$@" || fail
    title
}

break="$(python -c 'import os; print "*"*int(os.environ.get("COLUMNS", 80))')"

if [[ -n "$make_only" ]] ; then
    make_jsx
elif [[ -z "$forever" ]] ; then
    run "$@"
else
    while true ; do
        run "$@" || fail
        echo
        echo
        echo
        echo -e "\033[46;34m${break}\033[0m"
        echo
        echo
        echo
    done
fi
